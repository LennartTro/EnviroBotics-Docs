"use strict";(self.webpackChunkenviro_botics_summer_school=self.webpackChunkenviro_botics_summer_school||[]).push([[6799],{4687:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"overview and concept/concept","title":"Concept","description":"The EnviroBotics Summer School introduces students to environmental robotics, combining hardware, software, and real-world data collection. Participants will work in teams, build their own robots, and program them to perform meaningful tasks related to environmental monitoring.","source":"@site/docs/overview and concept/concept.md","sourceDirName":"overview and concept","slug":"/overview and concept/concept","permalink":"/EnviroBotics-Docs/docs/overview and concept/concept","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"concept","title":"Concept"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/EnviroBotics-Docs/docs/overview and concept/overview"},"next":{"title":"Target Audience","permalink":"/EnviroBotics-Docs/docs/overview and concept/target audience"}}');var i=n(4848),s=n(8453);const r={id:"concept",title:"Concept"},a="Concept of the EnviroBotics Summer School",l={},c=[{value:"Keywords",id:"keywords",level:2},{value:"Hardware Architecture",id:"hardware-architecture",level:2},{value:"Localization Module",id:"localization-module",level:2},{value:"Measurement Module",id:"measurement-module",level:2}];function d(e){const o={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"concept-of-the-envirobotics-summer-school",children:"Concept of the EnviroBotics Summer School"})}),"\n",(0,i.jsx)(o.p,{children:"The EnviroBotics Summer School introduces students to environmental robotics, combining hardware, software, and real-world data collection. Participants will work in teams, build their own robots, and program them to perform meaningful tasks related to environmental monitoring."}),"\n",(0,i.jsx)(o.p,{children:"In this summer school, you will get in touch with the whole robotics pipeline. Starting from sensing, over planning to control and actuation, you will be developing suitable algorithms to tackle chosen challenges."}),"\n",(0,i.jsx)(o.p,{children:"We will be using the ROS 2 framework. To evaluate the algorithms and solutions before deploying the real robot, we rely on gazebo as simulation environment, where you can interact with the vehicle just as you would with a real vehicle. This enables using the exact same code for both simulation and real world experiment."}),"\n",(0,i.jsx)(o.p,{children:"This documentation serves as your central guide throughout the program."}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Here is a short intro:"})}),"\n",(0,i.jsx)("img",{src:"/EnviroBotics-Docs/img/Concept.jpg",alt:"Concept Overview",style:{width:"100%",marginBottom:"1rem"}}),"\n",(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between",gap:"150px",flexWrap:"wrap"},children:[(0,i.jsx)("div",{style:{flex:"1 1 40%",aspectRatio:"16 / 9"},children:(0,i.jsx)("video",{controls:!0,poster:"/EnviroBotics-Docs/img/preview.jpg",style:{width:"100%",height:"100%",objectFit:"cover"},children:(0,i.jsx)("source",{src:"/EnviroBotics-Docs/video/Sim_vid.mp4",type:"video/mp4"})})}),(0,i.jsx)("div",{style:{flex:"1 1 40%",aspectRatio:"16 / 9"},children:(0,i.jsx)("video",{controls:!0,poster:"/EnviroBotics-Docs/img/preview.jpg",style:{width:"100%",height:"100%",objectFit:"cover"},children:(0,i.jsx)("source",{src:"/EnviroBotics-Docs/video/Video.mp4",type:"video/mp4"})})})]}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.h2,{id:"keywords",children:"Keywords"}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Gazebo"})}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.a,{href:"https://gazebosim.org/docs/fortress/getstarted/",children:"Gazebo"})," is the standalone simulator that computes the physical behaviour of the objects in the simulation. It also generates sensor data or renders camera images of simulated camera sensors. gazebo itself is independent of ROS. Maybe it is the easiest to view gazebo as a drop-in replacement for the real world robot, so we can work on our algorithms without beeing in the lab all day."]}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"ROS2"})}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.a,{href:"https://www.ros.org/",children:"ROS2"})," is the framework we use in this course. So probably most of the time (if not all) is spent on developing/implementing algorithms and letting them interact via the communication capabilities ROS 2 provides. Imagine ROS as some advanced message passing library. So instead of writing a single rather complex program, that handles all of our problems, we can use ROS to write multiple small programs that can communicate with each other via messages and solve only particular tasks."]}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"ArduPilot"})}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.a,{href:"https://ardupilot.org/",children:"ArduPilot"})," is an open-source autopilot system that supports a wide variety of vehicles \u2014 from drones and rovers to boats and submarines. It offers robust features for autonomous navigation, sensor integration, mission planning, and vehicle control in both real and simulated environments.\nIn the EnviroBotics Summer School, ArduPilot acts as the central controller for the ",(0,i.jsx)(o.strong,{children:"BlueBoat"}),", managing inputs from GPS, IMUs, and other sensors to control the motors and execute navigation tasks. It runs onboard the vehicle and ensures autonomous behavior even without a permanent connection to a ground station.\nBecause ArduPilot communicates via the ",(0,i.jsx)(o.strong,{children:"MAVLink"})," protocol, it can easily integrate with ",(0,i.jsx)(o.strong,{children:"ROS 2"}),", enabling seamless data sharing and coordination between your software nodes and the vehicle's control system. When combined with ",(0,i.jsx)(o.strong,{children:"Gazebo"}),", ArduPilot allows complete testing of mission logic in simulation before deployment on real hardware.\nYou can think of ArduPilot as the ",(0,i.jsx)(o.em,{children:"autonomous pilot"})," of your robot: it constantly reads sensor data, evaluates the current mission goals, and adjusts the vehicle\u2019s control signals accordingly \u2014 all in real time."]}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"QGroundControl"})}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.a,{href:"https://qgroundcontrol.com/",children:"QGroundControl"})," is a cross-platform ground control station (GCS) for drones, rovers, and autonomous vehicles. It provides a user-friendly interface to monitor and control vehicles running autopilot systems like ",(0,i.jsx)(o.strong,{children:"ArduPilot"})," or ",(0,i.jsx)(o.strong,{children:"PX4"}),".\nIn the Summer School, QGroundControl is used to:"]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Visualize the BlueBoat\u2019s GPS position and sensor data in real time."}),"\n",(0,i.jsx)(o.li,{children:"Upload and manage autonomous missions with waypoints."}),"\n",(0,i.jsx)(o.li,{children:"Calibrate sensors such as compasses or IMUs."}),"\n",(0,i.jsx)(o.li,{children:"Monitor vehicle parameters (battery status, telemetry, logs)."}),"\n",(0,i.jsxs)(o.li,{children:["Manually control the boat during testing or debugging.\nQGroundControl communicates with the vehicle using the ",(0,i.jsx)(o.strong,{children:"MAVLink"})," protocol, just like ArduPilot. It acts as a bridge between the operator and the robot, enabling both real-time control and mission planning.\nYou can think of QGroundControl as the ",(0,i.jsx)(o.em,{children:"mission control center"}),": while ROS and ArduPilot handle the onboard autonomy, QGroundControl provides a visual overview and fine-tuning of everything happening on (or inside) the BlueBoat."]}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Docker"})}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.a,{href:"https://www.docker.com/",children:"Docker"})," is a platform that helps you package software into standardized units called ",(0,i.jsx)(o.em,{children:"containers"}),". These containers bundle your application code along with everything it needs to run \u2013 libraries, dependencies, and system tools. In the context of robotics, Docker makes it easy to ensure that all participants have the exact same development environment, avoiding the infamous \u201cbut it works on my machine\u201d problem. During the summer school, we\u2019ll use Docker to provide you with pre-configured environments for ROS, simulation tools, and more \u2013 so you can focus on building cool things, not debugging setups."]}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Visual Studio Code (VS Code)"})}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.a,{href:"https://code.visualstudio.com/",children:"Visual Studio Code"})," is a lightweight but powerful source code editor developed by Microsoft. It supports a wide range of programming languages and tools, and it's especially popular in robotics and ROS development due to its flexibility and extensive plugin ecosystem.\nIn the context of this summer school, VS Code serves as your primary development environment. It offers features such as:"]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Syntax highlighting and code completion for Python, C++, and ROS"}),"\n",(0,i.jsx)(o.li,{children:"Integrated terminal for building, launching, and testing code"}),"\n",(0,i.jsx)(o.li,{children:"Built-in Git version control"}),"\n",(0,i.jsx)(o.li,{children:"Support for Docker and remote development via extensions"}),"\n",(0,i.jsxs)(o.li,{children:["Helpful debugging tools and visualization of running ROS nodes\nBy using the ",(0,i.jsx)(o.a,{href:"https://code.visualstudio.com/docs/devcontainers/containers",children:"Dev Containers"})," extension, you can even run VS Code ",(0,i.jsx)(o.em,{children:"inside the Docker container"}),", meaning you don\u2019t have to install ROS or any tools directly on your machine. This ensures a consistent development experience across all participants.\nYou can think of VS Code as your ",(0,i.jsx)(o.em,{children:"workbench"})," \u2013 where you write, test, and manage all the software components of your robot."]}),"\n"]}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.h2,{id:"hardware-architecture",children:"Hardware Architecture"}),"\n",(0,i.jsx)(o.p,{children:"You will develop your algorithms in ROS and make use of the publisher/subscriber system, which allows us to run different functionalities on different machines. In fact ROS abstracts the communication in a way that we as users do not even recognize whether or not our programs/nodes communicate across different machines (computers) in the same network."}),"\n",(0,i.jsx)("img",{src:"/EnviroBotics-Docs/img/Hardware Architecture.png",alt:"Concept Overview",style:{width:"100%",marginBottom:"1rem"}}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.h2,{id:"localization-module",children:"Localization Module"}),"\n",(0,i.jsxs)("div",{style:{display:"flex",alignItems:"flex-start",gap:"20px",marginBottom:"2rem"},children:[(0,i.jsxs)("figure",{style:{margin:0},children:[(0,i.jsx)("img",{src:"/EnviroBotics-Docs/img/ArduSimple.jpg",alt:"ArduSimple GNSS Module",style:{width:"250px",height:"auto",display:"block"}}),(0,i.jsx)("figcaption",{style:{fontStyle:"italic",color:"#555",fontSize:"0.9rem",marginTop:"0.5rem"},children:(0,i.jsx)(o.p,{children:"ArduSimple GNSS module with NTRIP Client"})})]}),(0,i.jsxs)("div",{style:{flex:1},children:[(0,i.jsx)("p",{children:(0,i.jsx)(o.p,{children:"The ArduSimple GNSS module is used in the summer school to provide high-precision GPS data. It enables the robots\nto localize themselves accurately in outdoor environments, which is crucial for tasks like waypoint navigation\nand mapping."})}),(0,i.jsx)("p",{children:(0,i.jsx)(o.p,{children:"The module supports RTK (Real-Time Kinematic) positioning for centimeter-level accuracy, making it a valuable\ncomponent for our robotic system in real-world deployment."})})]})]}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.h2,{id:"measurement-module",children:"Measurement Module"}),"\n",(0,i.jsxs)("div",{style:{display:"flex",alignItems:"flex-start",gap:"20px",marginBottom:"2rem"},children:[(0,i.jsxs)("figure",{style:{margin:0},children:[(0,i.jsx)("img",{src:"/EnviroBotics-Docs/img/MeasurementModule.jpg",alt:"Measurement Module",style:{width:"250px",height:"auto",display:"block"}}),(0,i.jsx)("figcaption",{style:{fontStyle:"italic",color:"#555",fontSize:"0.9rem",marginTop:"0.5rem"},children:(0,i.jsxs)(o.p,{children:["Custom-built winch system for water ",(0,i.jsx)("br",{}),"\ntemperature profiling"]})})]}),(0,i.jsxs)("div",{style:{flex:1},children:[(0,i.jsx)("p",{children:(0,i.jsx)(o.p,{children:"The measurement module is designed to lower a temperature sensor into different water depths using a\nmotor-driven winch. It enables students to collect vertical temperature profiles of a lake with high spatial\nprecision."})}),(0,i.jsx)("p",{children:(0,i.jsx)(o.p,{children:"The system is fully integrated into ROS, allowing remote control via ROS nodes. Target depths can be commanded\ndynamically, and data can be stored onboard or transmitted wirelessly to a base station."})})]})]}),"\n",(0,i.jsx)(o.hr,{})]})}function h(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>a});var t=n(6540);const i={},s=t.createContext(i);function r(e){const o=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:o},e.children)}}}]);