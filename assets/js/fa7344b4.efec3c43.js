"use strict";(self.webpackChunkenviro_botics_summer_school=self.webpackChunkenviro_botics_summer_school||[]).push([[6636],{8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(6540);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}},9497:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"tutorials/start simulation","title":"Starting simulation","description":"This guide explains how to simulate the BlueBoat using the gazebosimblueboatardupilotsitl repository. The Docker container setup and build steps are described previously \u2014 this section starts with launching the container.","source":"@site/docs/tutorials/start simulation.md","sourceDirName":"tutorials","slug":"/tutorials/start simulation","permalink":"/EnviroBotics-Docs/docs/tutorials/start simulation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"start simulation","title":"Starting simulation"},"sidebar":"tutorialSidebar","previous":{"title":"Getting started","permalink":"/EnviroBotics-Docs/docs/tutorials/getting-started"},"next":{"title":"Build your own ROS nodes","permalink":"/EnviroBotics-Docs/docs/tutorials/build ROS nodes"}}');var r=n(4848),i=n(8453);const s={id:"start simulation",title:"Starting simulation"},a="Starting the BlueBoat Simulation",l={},d=[{value:"Host Requirements",id:"host-requirements",level:2},{value:"Step 1 \u2013 Run the Docker Container",id:"step-1--run-the-docker-container",level:2},{value:"Now open a terminal to run the container:",id:"now-open-a-terminal-to-run-the-container",level:3},{value:"1. Go to the Docker folder:",id:"1-go-to-the-docker-folder",level:4},{value:"2. Start the container:",id:"2-start-the-container",level:4},{value:"Step 2 \u2013 Build the ROS 2 Workspaces",id:"step-2--build-the-ros-2-workspaces",level:2},{value:"1. Build BlueBoat Workspace",id:"1-build-blueboat-workspace",level:3},{value:"3. Change the directory",id:"3-change-the-directory",level:3},{value:"4. Build this workspace too:",id:"4-build-this-workspace-too",level:3},{value:"Step 3 \u2013 Start QGroundControl (outside Docker)",id:"step-3--start-qgroundcontrol-outside-docker",level:2},{value:"Step 4 - Run GazeboSim inside Docker",id:"step-4---run-gazebosim-inside-docker",level:2},{value:"Step 5 - Run SITL (Software in the Loop)",id:"step-5---run-sitl-software-in-the-loop",level:2},{value:"Step 5 - Set up QGroundControl for your Boat",id:"step-5---set-up-qgroundcontrol-for-your-boat",level:2},{value:"4. Go further to Parameters and search for steer_type:",id:"4-go-further-to-parameters-and-search-for-steer_type",level:4},{value:"Summary",id:"summary",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"starting-the-blueboat-simulation",children:"Starting the BlueBoat Simulation"})}),"\n",(0,r.jsxs)(t.p,{children:["This guide explains how to simulate the BlueBoat using the ",(0,r.jsx)(t.a,{href:"https://github.com/tum-erl/gazebosim_blueboat_ardupilot_sitl",children:"gazebosim_blueboat_ardupilot_sitl"})," repository. The Docker container setup and build steps are described previously \u2014 this section starts with launching the container."]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"host-requirements",children:"Host Requirements"}),"\n",(0,r.jsx)(t.p,{children:"Make sure you have a working Docker installation and QGroundControl for mission planning and visual feedback."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"step-1--run-the-docker-container",children:"Step 1 \u2013 Run the Docker Container"}),"\n",(0,r.jsx)(t.p,{children:"After cloning the simulation repository and building the Docker image, you can start the container."}),"\n",(0,r.jsx)(t.p,{children:"But first navigate into the Docker folder:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",metastring:"{6}",children:"home/\n\u251c\u2500\u2500 Summer_School\n\u2502   |\u2500\u2500 gazebosim_blueboat_ardupilot_sitl/\n|   |       |\u2500\u2500 blueboat_sitl/\n|   |       |       |\u2500\u2500 docker\n|   |       |       |     |\u2500\u2500  run.sh\n|   |       |       |     |\u2500\u2500  build.sh\n|   |       |       |     \u2514\u2500\u2500  Dockerfile\n|   |       |       \u2514\u2500\u2500...\n|   |       \u2514\u2500\u2500...\n|   \u2514\u2500\u2500...  \n\u2514\u2500\u2500...\n"})}),"\n",(0,r.jsx)(t.p,{children:"and adjust these lines in run.sh:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'local_gz_ws="/home/Lennart/blueboat_ardupilot_SITL/gz_ws"\nlocal_SITL_Models="/home/Lennart/blueboat_ardupilot_SITL/SITL_Models"\n'})}),"\n",(0,r.jsx)(t.p,{children:"to your specific path:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'local_gz_ws="/YOURPATH/Summer_School/blueboat_ardupilot_SITL/gz_ws"\nlocal_SITL_Models="/YOURPATH/Summer_School/blueboat_ardupilot_SITL/SITL_Models"\n'})}),"\n",(0,r.jsx)(t.p,{children:"(You can open it with Visual Studio Code, for example, to adjust the lines)"}),"\n",(0,r.jsx)(t.h3,{id:"now-open-a-terminal-to-run-the-container",children:"Now open a terminal to run the container:"}),"\n",(0,r.jsx)(t.h4,{id:"1-go-to-the-docker-folder",children:"1. Go to the Docker folder:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cd ./gazebosim_blueboat_ardupilot_sitl/blueboat_sitl/docker\n"})}),"\n",(0,r.jsx)(t.h4,{id:"2-start-the-container",children:"2. Start the container:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"sudo ./run.sh\n"})}),"\n",(0,r.jsx)(t.p,{children:"This will launch an ubuntu-based Docker container with all required dependencies and libraries for running the BlueBoat simulation."}),"\n",(0,r.jsx)(t.p,{children:"Once inside the container, you\u2019ll have access to all simulation and ROS 2 tools pre-installed. That's how it looks like:"}),"\n",(0,r.jsx)("img",{src:"/EnviroBotics-Docs/img/Docker_container.png",alt:"start simulation",style:{width:"80%",marginBottom:"1rem"}}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"step-2--build-the-ros-2-workspaces",children:"Step 2 \u2013 Build the ROS 2 Workspaces"}),"\n",(0,r.jsx)(t.p,{children:"Once you're inside the Docker container, you need to build the ROS 2 workspaces that contain the packages for simulation, BlueBoat control, and visualization."}),"\n",(0,r.jsx)(t.h3,{id:"1-build-blueboat-workspace",children:"1. Build BlueBoat Workspace"}),"\n",(0,r.jsx)(t.p,{children:"Navigate to the folder colcon_ws and build it:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release\n"})}),"\n",(0,r.jsx)(t.p,{children:"(If you get any problems during the build-process - don't build the workspace. The files may already be there.)"}),"\n",(0,r.jsx)(t.p,{children:"Source the installed file:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"source install/setup.bash\n"})}),"\n",(0,r.jsx)(t.h3,{id:"3-change-the-directory",children:"3. Change the directory"}),"\n",(0,r.jsx)(t.p,{children:'Go to the directory "gz_ws". (The pre command "../" will go one file level up)'}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cd ../gz_ws\n"})}),"\n",(0,r.jsx)(t.h3,{id:"4-build-this-workspace-too",children:"4. Build this workspace too:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"colcon build --symlink-install --merge-install --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_TESTING=ON -DCMAKE_CXX_STANDARD=17\n"})}),"\n",(0,r.jsx)(t.p,{children:"and source everything:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"source install/setup.bash\n\nsource gazebo_exports.sh\n"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"step-3--start-qgroundcontrol-outside-docker",children:"Step 3 \u2013 Start QGroundControl (outside Docker)"}),"\n",(0,r.jsx)(t.p,{children:"Just click on the icon in your QGroundControl folder. (You do not need the terminal here)"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"step-4---run-gazebosim-inside-docker",children:"Step 4 - Run GazeboSim inside Docker"}),"\n",(0,r.jsx)(t.p,{children:"Start a new terminal and enter the running docker container. It doesn't matter where you open your terminal - with that command you will jump into the container you started before:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"sudo docker exec -it blueboat_sitl /bin/bash\n"})}),"\n",(0,r.jsx)(t.p,{children:"Chang to ardupilot directory:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cd ../gz_ws\n"})}),"\n",(0,r.jsx)(t.p,{children:"(or go back to your previous terminal with the docker container) and launch the gazebo simulation:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"ros2 launch move_blueboat launch_robot_simulation.launch.py\n"})}),"\n",(0,r.jsx)(t.p,{children:"But not without sourcing everything in the first place ;-):"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"source install/setup.bash\nsource gazebo_exports.sh\n"})}),"\n",(0,r.jsx)(t.p,{children:"Now you should see the Gazebo simulation with some physical models for water and our BlueBoat. If you look exactly you will see how the Boat is moving. To reduce the requirements for graphics we replaced the rendered water surface with a flat plane. However, a wave model runs in the background."}),"\n",(0,r.jsx)("img",{src:"/EnviroBotics-Docs/img/Gazebo.png",alt:"Concept Overview",style:{width:"100%",marginBottom:"1rem"}}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"step-5---run-sitl-software-in-the-loop",children:"Step 5 - Run SITL (Software in the Loop)"}),"\n",(0,r.jsx)(t.p,{children:"Start a new terminal and enter the running docker container. It doesn't matter where you open your terminal:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"sudo docker exec -it blueboat_sitl /bin/bash\n"})}),"\n",(0,r.jsx)(t.p,{children:"Chang to ardupilot directory:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cd ../ardupilot\n"})}),"\n",(0,r.jsx)(t.p,{children:"Run:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"sim_vehicle.py -v Rover -f gazebo-rover --model JSON --map --console -l 48.214611,11.720278,0,0\n"})}),"\n",(0,r.jsx)(t.p,{children:'After a few seconds your QGroundCrontrol is connected to a "virtual" BlueBoat swimming on Speichersee. That is were the GPS Position 48.214611 N and 11.720278 W leads us.'}),"\n",(0,r.jsx)("img",{src:"/EnviroBotics-Docs/img/Ardupilot_Speichersee.png",alt:"starting simulation",style:{width:"100%",marginBottom:"1rem"}}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Click to expand the explanation of SITL and HITL"}),(0,r.jsx)(t.p,{children:"Software-in-the-Loop (SITL)"}),(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"SITL"})," stands for Software in the Loop. It allows you to run the full autopilot software (e.g. ArduPilot) on your PC, without any physical hardware involved. The software behaves as if it were running on a real flight controller. Instead of receiving sensor data from real IMUs or GPS, it receives simulated sensor data (e.g. from Gazebo). Instead of sending real motor signals, it sends them to the simulated motors."]}),(0,r.jsx)(t.p,{children:"Benefits of SITL:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"No hardware needed \u2014 fast and easy testing"}),"\n",(0,r.jsx)(t.li,{children:"Safer than real-world testing"}),"\n",(0,r.jsx)(t.li,{children:"Reproducible and scriptable"}),"\n",(0,r.jsx)(t.li,{children:"Ideal for early development"}),"\n"]}),(0,r.jsx)(t.p,{children:"In SITL, you can test complete missions and control strategies \u2014 just like in the real system \u2014 but from your laptop."}),(0,r.jsx)(t.hr,{}),(0,r.jsx)(t.p,{children:"Hardware-in-the-Loop (HITL) - just for your information"}),(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"HITL"})," stands for Hardware in the Loop. Here, the real autopilot hardware (e.g. a Pixhawk) is used, but connected to a simulated environment.\nThe physical flight controller receives simulated sensor data. The motor outputs are processed as if they were sent to real actuators \u2014 but are intercepted by the simulation."]}),(0,r.jsx)(t.p,{children:"Benefits of HITL:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Tests real hardware behavior"}),"\n",(0,r.jsx)(t.li,{children:"Helps identify hardware-related issues (e.g. timing, I/O)"}),"\n",(0,r.jsx)(t.li,{children:"Great final step before deploying in the real world"}),"\n"]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"step-5---set-up-qgroundcontrol-for-your-boat",children:"Step 5 - Set up QGroundControl for your Boat"}),"\n",(0,r.jsx)(t.p,{children:"Make sure, that the behavior of your simulated Boat is similar to a real BlueBoat"}),"\n",(0,r.jsxs)("div",{style:{display:"flex",gap:"1rem",justifyContent:"space-between",flexWrap:"wrap"},children:[(0,r.jsxs)("div",{style:{flex:"1 1 48%"},children:[(0,r.jsx)("h4",{children:"1. Click on the Q in the left upper corner:"}),(0,r.jsx)("img",{src:"/EnviroBotics-Docs/img/QGC_1.png",alt:"QGC Step 1",style:{width:"100%",borderRadius:"8px"}})]}),(0,r.jsxs)("div",{style:{flex:"1 1 48%"},children:[(0,r.jsx)("h4",{children:"2. Go to Frame and select Boat instead of Rover:"}),(0,r.jsx)("img",{src:"/EnviroBotics-Docs/img/QGC_3.png",alt:"QGC Step 2",style:{width:"100%",borderRadius:"8px"}})]})]}),"\n",(0,r.jsx)(t.h4,{id:"4-go-further-to-parameters-and-search-for-steer_type",children:"4. Go further to Parameters and search for steer_type:"}),"\n",(0,r.jsx)(t.p,{children:'Choose "Two Paddles Input" in the Parameter Editor and save. This is important because the BlueBoat steers with its two propellers and not with a fin.'}),"\n",(0,r.jsx)("img",{src:"/EnviroBotics-Docs/img/QGC_4.png",alt:"starting simulation",style:{width:"100%",marginBottom:"1rem"}}),"\n",(0,r.jsx)(t.p,{children:"Go back by clicking on the left upper corner."}),"\n",(0,r.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(t.p,{children:"You're now ready to explore the BlueBoat simulation. You can modify ROS 2 nodes, interact with sensors, plan missions, and experiment with algorithms in a realistic simulated environment - that is all part of the following section."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);