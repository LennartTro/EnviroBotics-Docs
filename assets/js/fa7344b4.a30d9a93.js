"use strict";(self.webpackChunkenviro_botics_summer_school=self.webpackChunkenviro_botics_summer_school||[]).push([[6636],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}},9497:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"tutorials/start simulation","title":"Starting simulation","description":"This guide explains how to simulate the BlueBoat using the gazebosimblueboatardupilotsitl repository. The Docker container setup and build steps are described previously \u2014 this section starts with launching the container.","source":"@site/docs/tutorials/start simulation.md","sourceDirName":"tutorials","slug":"/tutorials/start simulation","permalink":"/EnviroBotics-Docs/docs/tutorials/start simulation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"start simulation","title":"Starting simulation"},"sidebar":"tutorialSidebar","previous":{"title":"Getting started","permalink":"/EnviroBotics-Docs/docs/tutorials/getting-started"},"next":{"title":"Build your own ROS nodes","permalink":"/EnviroBotics-Docs/docs/tutorials/build ROS nodes"}}');var s=t(4848),r=t(8453);const i={id:"start simulation",title:"Starting simulation"},a="Starting the BlueBoat Simulation",l={},c=[{value:"Host Requirements",id:"host-requirements",level:2},{value:"Step 1 \u2013 Run the Docker Container",id:"step-1--run-the-docker-container",level:2},{value:"1. Go to the Docker folder:",id:"1-go-to-the-docker-folder",level:4},{value:"2. Start the container:",id:"2-start-the-container",level:4},{value:"Step 2 \u2013 Build the ROS 2 Workspaces",id:"step-2--build-the-ros-2-workspaces",level:2},{value:"1. Source ROS 2",id:"1-source-ros-2",level:3},{value:"2. Build BlueBoat Workspace",id:"2-build-blueboat-workspace",level:3},{value:"3. Change the directory",id:"3-change-the-directory",level:3},{value:"4. Build this workspace too:",id:"4-build-this-workspace-too",level:3},{value:"Step 3 \u2013 Start Start QGroundControl (outside Docker)",id:"step-3--start-start-qgroundcontrol-outside-docker",level:2},{value:"Step 4 - Run GazeboSim inside Docker",id:"step-4---run-gazebosim-inside-docker",level:2},{value:"Step 5 - Run SITL (Software in the Loop)",id:"step-5---run-sitl-software-in-the-loop",level:2},{value:"Here the ....",id:"here-the-",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"starting-the-blueboat-simulation",children:"Starting the BlueBoat Simulation"})}),"\n",(0,s.jsxs)(n.p,{children:["This guide explains how to simulate the BlueBoat using the ",(0,s.jsx)(n.a,{href:"https://github.com/markusbuchholz/gazebosim_blueboat_ardupilot_sitl",children:"gazebosim_blueboat_ardupilot_sitl"})," repository. The Docker container setup and build steps are described previously \u2014 this section starts with launching the container."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"host-requirements",children:"Host Requirements"}),"\n",(0,s.jsx)(n.p,{children:"Make sure you have a working Docker installation and QGroundControl for mission planning and visual feedback."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-1--run-the-docker-container",children:"Step 1 \u2013 Run the Docker Container"}),"\n",(0,s.jsx)(n.p,{children:"After cloning the simulation repository and building the Docker image, you can start the container."}),"\n",(0,s.jsx)(n.p,{children:"Navigate into the Docker folder in the\nand adjust these lines in run.sh:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'local_gz_ws="/home/Lennart/blueboat_ardupilot_SITL/gz_ws"\nlocal_SITL_Models="/home/Lennart/blueboat_ardupilot_SITL/SITL_Models"\n'})}),"\n",(0,s.jsx)(n.p,{children:"to your specific path:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'local_gz_ws="/YOURPATH/Summer_School/blueboat_ardupilot_SITL/gz_ws"\nlocal_SITL_Models="/YOURPATH/Summer_School/blueboat_ardupilot_SITL/SITL_Models"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now open a terminal and run the container:"}),"\n",(0,s.jsx)(n.h4,{id:"1-go-to-the-docker-folder",children:"1. Go to the Docker folder:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd gazebosim_blueboat_ardupilot_sitl/blueboat_sitl/docker\n"})}),"\n",(0,s.jsx)(n.h4,{id:"2-start-the-container",children:"2. Start the container:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo ./run.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will launch an Ubuntu-based Docker container with all required dependencies and libraries for running the BlueBoat simulation."}),"\n",(0,s.jsx)(n.p,{children:"Once inside the container, you\u2019ll have access to all simulation and ROS 2 tools pre-installed."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-2--build-the-ros-2-workspaces",children:"Step 2 \u2013 Build the ROS 2 Workspaces"}),"\n",(0,s.jsx)(n.p,{children:"Once you're inside the Docker container, you need to build the ROS 2 workspaces that contain the packages for simulation, BlueBoat control, and visualization."}),"\n",(0,s.jsx)(n.h3,{id:"1-source-ros-2",children:"1. Source ROS 2"}),"\n",(0,s.jsx)(n.p,{children:"Before building, make sure the ROS 2 environment is sourced:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source /opt/ros/humble/setup.bash\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-build-blueboat-workspace",children:"2. Build BlueBoat Workspace"}),"\n",(0,s.jsx)(n.p,{children:"Navigate to the BlueBoat workspace and build it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"colcon build\n"})}),"\n",(0,s.jsx)(n.p,{children:"Source the installed file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source install/setup.bash\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-change-the-directory",children:"3. Change the directory"}),"\n",(0,s.jsx)(n.p,{children:'Go to the directory "gz_ws". (The pre command "../" will go one file level up)'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd ../gz_ws\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-build-this-workspace-too",children:"4. Build this workspace too:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"colcon build --symlink-install --merge-install --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_TESTING=ON -DCMAKE_CXX_STANDARD=17\n"})}),"\n",(0,s.jsx)(n.p,{children:"and source everything:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source install/setup.bash\n\nsource gazebo_exports.sh\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-3--start-start-qgroundcontrol-outside-docker",children:"Step 3 \u2013 Start Start QGroundControl (outside Docker)"}),"\n",(0,s.jsx)(n.p,{children:"Just click on the icon"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-4---run-gazebosim-inside-docker",children:"Step 4 - Run GazeboSim inside Docker"}),"\n",(0,s.jsx)(n.p,{children:"Start a new terminal and enter the running docker container"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo docker exec -it blueboat_sitl /bin/bash\n"})}),"\n",(0,s.jsx)(n.p,{children:"Chang to gz-workspace"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd ../gz_ws\n"})}),"\n",(0,s.jsx)(n.p,{children:"And launch the gazebo simulation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ros2 launch move_blueboat launch_robot_simulation.launch.py\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now you should see the Gazebo simulation with some physical models for water and our BlueBoat. If you look exactly you will see how the Boat is moving.(To reduce the requirements for graphics we replaced the rendered water surface with a flat plane. However, a wave model runs in the background.)"}),"\n",(0,s.jsx)("img",{src:"/EnviroBotics-Docs/img/Gazebo.png",alt:"Concept Overview",style:{width:"100%",marginBottom:"1rem"}}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-5---run-sitl-software-in-the-loop",children:"Step 5 - Run SITL (Software in the Loop)"}),"\n",(0,s.jsx)(n.p,{children:"Start a new terminal and enter the running docker container (doesn't matter where do you open your terminal):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo docker exec -it blueboat_sitl /bin/bash\n"})}),"\n",(0,s.jsx)(n.p,{children:"Chang to ardupilot directory:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd ../ardupilot\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sim_vehicle.py -v Rover -f gazebo-rover --model JSON --map --console -l 48.214611,11.720278,0,0\n"})}),"\n",(0,s.jsx)(n.h2,{id:"here-the-",children:"Here the ...."}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.p,{children:"You're now ready to explore the BlueBoat simulation. You can modify ROS 2 nodes, interact with sensors, plan missions, and experiment with algorithms in a realistic simulated environment."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);